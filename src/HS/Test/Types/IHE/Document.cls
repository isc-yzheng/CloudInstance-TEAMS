Class HS.Test.Types.IHE.Document Extends HS.Test.Types.IHE.ObjectRef
{

/*
	Internal (used for SOAP/MTOM)
*/
Property Content As HS.Test.Types.Attachment;

/* 
	Attributes
*/
/// MIME type
Property MimeType As HS.Test.Types.Value;

/// Document status, generated by the registry
Property AvailabilityStatus As HS.Test.Types.Value;

/*
	Slots
*/
/// Time the author created the document
Property CreationTime As HS.Test.Types.Value;

/// Hash key of the document, computed by the repository
Property Hash As HS.Test.Types.Value;

/// The language of character data in the document
Property LanguageCode As HS.Test.Types.Value;

/// Who has legally authenticated the document (optional)
Property LegalAuthenticator As HS.Test.Types.Value;

/// Repository OID of where the document is stored
Property RepositoryUniqueId As HS.Test.Types.Value;

/// Start time, UTC, HL7v2 format
Property ServiceStartTime As HS.Test.Types.Value;

/// Stop time, UTC, HL7v2 format
Property ServiceStopTime As HS.Test.Types.Value;

/// Document size, computed by repository
Property Size As HS.Test.Types.Value;

/// Patient MRN
Property SourcePatientId As HS.Test.Types.Identifier;

/// Patient demographics
Property SourcePatientInfo As list Of HS.Test.Types.Value(XMLITEMNAME = "Item");

/// URI used for retrieval, computed by repository
Property URI As HS.Test.Types.Value;

/*
	Classifications
*/
/// List of document authors
Property Authors As list Of HS.Test.Types.IHE.Author(XMLNAME = "Author", XMLPROJECTION = "ELEMENT");

/// The kind of document
Property ClassCode As HS.Test.Types.Code;

/// The level of confidentiality - to be addressed in future IHE specifications. Usually only one, so projected as element for brevity
Property ConfidentialityCodes As list Of HS.Test.Types.Code(XMLNAME = "ConfidentialityCode", XMLPROJECTION = "ELEMENT");

/// Optional list of the main clinical acts. Optional, so projected as element for brevity
Property EventCodes As list Of HS.Test.Types.Code(XMLNAME = "EventCode", XMLPROJECTION = "ELEMENT");

/// Document format
Property FormatCode As HS.Test.Types.Code;

/// Type of organizational setting of the encounter during which the document act occurred
Property HealthcareFacilityTypeCode As HS.Test.Types.Code;

/// The clinical specialty where the act that resulted in the document was performed
Property PracticeSettingCode As HS.Test.Types.Code;

/// The precise kind of document
Property TypeCode As HS.Test.Types.Code;

/*
	Strings
*/
/// Comments
Property Comments As HS.Test.Types.Text;

/// Document title
Property Title As HS.Test.Types.Value;

/*
	External Identifiers
*/
/// Patient ID
Property PatientId As HS.Test.Types.Value;

/// Document OID
Property UniqueId As HS.Test.Types.Value;

}
