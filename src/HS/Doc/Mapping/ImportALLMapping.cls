/// Import the ALL mapping files and store them to database for searching.:
/// 		1. HL7 to SDA  mapping file generated by  HL7ToSDAMapper
/// 		2. SDA to CDA mapping file generated by SDAtoCDAMapper
/// 		3. CDA to SDA mapping file generated by CDAToSDAMapper 
/// 
Class HS.Doc.Mapping.ImportALLMapping [ Abstract ]
{

ClassMethod XMLImport(Path As %String = "", KeepCurrentData As %Boolean = 0, displayDetail As %Boolean = 0) As %Status
{
	// Run:
	//		Do ##class(HS.Doc.Mapping.ImportALLMapping).XMLImport("C:\temp")
	//		By default, it initializes the prior tables entries and doesn't show details of the run.
	// To keep current data, run:
	//		Do ##class(HS.Doc.Mapping.ImportALLMapping).XMLImport("C:\temp",1)
	// To show details while running run:
	//		Do ##class(HS.Doc.Mapping.ImportALLMapping).XMLImport("C:\temp",,1)
	
	Set status = $$$OK
	
	Try
	{
		If (Path = "") {
			Set status = "No path specified"
			Quit
		}
		
		W !!,"***",!,"Importing HL7 to SDA mapping ... (file ",Path,"\allclasses.xml)",!
		Do ##class(HS.Doc.Mapping.ImportHL7ToSDAMapping).XMLImport(Path_"\allclasses.xml",KeepCurrentData,displayDetail)
		W !!,"***",!,"Importing CDA to SDA mapping ... (file ",Path,"\Import.xml)",!
		Do ##class(HS.Doc.Mapping.ImportCDAToSDAMapping).XMLImport(Path_"\Import.xml",1,displayDetail)
		W !!,"***",!,"Importing SDA to CDA mapping ... (file ",Path,"\Export.xml)",!
		Do ##class(HS.Doc.Mapping.ImportSDAToCDAMapping).XMLImport(Path_"\Export.xml",1,displayDetail)
	}
	Catch ex
	{
		Set status = ex.AsStatus()
	}
	
	If $$$ISERR(status) do $System.Status.DisplayError(status) quit status
	
	quit
}

}
