Class HS.FHIR.vSTU3.Model.Base.ResourceContainer Extends HS.FHIR.vSTU3.Model.Base.AbstractBase [ ProcedureBlock ]
{

Parameter ELEMENTQUALIFIED = 1;

Parameter XMLNAME = "ResourceContainer";

Parameter XMLSEQUENCE = 1;

Parameter JSONTYPEFIELD;

Property Account As HS.FHIR.vSTU3.Model.Resource.Account(XMLNAME = "Account", XMLPROJECTION = "ELEMENT");

Property ActivityDefinition As HS.FHIR.vSTU3.Model.Resource.ActivityDefinition(XMLNAME = "ActivityDefinition", XMLPROJECTION = "ELEMENT");

Property AdverseEvent As HS.FHIR.vSTU3.Model.Resource.AdverseEvent(XMLNAME = "AdverseEvent", XMLPROJECTION = "ELEMENT");

Property AllergyIntolerance As HS.FHIR.vSTU3.Model.Resource.AllergyIntolerance(XMLNAME = "AllergyIntolerance", XMLPROJECTION = "ELEMENT");

Property Appointment As HS.FHIR.vSTU3.Model.Resource.Appointment(XMLNAME = "Appointment", XMLPROJECTION = "ELEMENT");

Property AppointmentResponse As HS.FHIR.vSTU3.Model.Resource.AppointmentResponse(XMLNAME = "AppointmentResponse", XMLPROJECTION = "ELEMENT");

Property AuditEvent As HS.FHIR.vSTU3.Model.Resource.AuditEvent(XMLNAME = "AuditEvent", XMLPROJECTION = "ELEMENT");

Property Basic As HS.FHIR.vSTU3.Model.Resource.Basic(XMLNAME = "Basic", XMLPROJECTION = "ELEMENT");

Property Binary As HS.FHIR.vSTU3.Model.Resource.Binary(XMLNAME = "Binary", XMLPROJECTION = "ELEMENT");

Property BodySite As HS.FHIR.vSTU3.Model.Resource.BodySite(XMLNAME = "BodySite", XMLPROJECTION = "ELEMENT");

Property Bundle As HS.FHIR.vSTU3.Model.Resource.Bundle(XMLNAME = "Bundle", XMLPROJECTION = "ELEMENT");

Property CapabilityStatement As HS.FHIR.vSTU3.Model.Resource.CapabilityStatement(XMLNAME = "CapabilityStatement", XMLPROJECTION = "ELEMENT");

Property CarePlan As HS.FHIR.vSTU3.Model.Resource.CarePlan(XMLNAME = "CarePlan", XMLPROJECTION = "ELEMENT");

Property CareTeam As HS.FHIR.vSTU3.Model.Resource.CareTeam(XMLNAME = "CareTeam", XMLPROJECTION = "ELEMENT");

Property ChargeItem As HS.FHIR.vSTU3.Model.Resource.ChargeItem(XMLNAME = "ChargeItem", XMLPROJECTION = "ELEMENT");

Property Claim As HS.FHIR.vSTU3.Model.Resource.Claim(XMLNAME = "Claim", XMLPROJECTION = "ELEMENT");

Property ClaimResponse As HS.FHIR.vSTU3.Model.Resource.ClaimResponse(XMLNAME = "ClaimResponse", XMLPROJECTION = "ELEMENT");

Property ClinicalImpression As HS.FHIR.vSTU3.Model.Resource.ClinicalImpression(XMLNAME = "ClinicalImpression", XMLPROJECTION = "ELEMENT");

Property CodeSystem As HS.FHIR.vSTU3.Model.Resource.CodeSystem(XMLNAME = "CodeSystem", XMLPROJECTION = "ELEMENT");

Property Communication As HS.FHIR.vSTU3.Model.Resource.Communication(XMLNAME = "Communication", XMLPROJECTION = "ELEMENT");

Property CommunicationRequest As HS.FHIR.vSTU3.Model.Resource.CommunicationRequest(XMLNAME = "CommunicationRequest", XMLPROJECTION = "ELEMENT");

Property CompartmentDefinition As HS.FHIR.vSTU3.Model.Resource.CompartmentDefinition(XMLNAME = "CompartmentDefinition", XMLPROJECTION = "ELEMENT");

Property Composition As HS.FHIR.vSTU3.Model.Resource.Composition(XMLNAME = "Composition", XMLPROJECTION = "ELEMENT");

Property ConceptMap As HS.FHIR.vSTU3.Model.Resource.ConceptMap(XMLNAME = "ConceptMap", XMLPROJECTION = "ELEMENT");

Property Condition As HS.FHIR.vSTU3.Model.Resource.Condition(XMLNAME = "Condition", XMLPROJECTION = "ELEMENT");

Property Consent As HS.FHIR.vSTU3.Model.Resource.Consent(XMLNAME = "Consent", XMLPROJECTION = "ELEMENT");

Property Contract As HS.FHIR.vSTU3.Model.Resource.Contract(XMLNAME = "Contract", XMLPROJECTION = "ELEMENT");

Property Coverage As HS.FHIR.vSTU3.Model.Resource.Coverage(XMLNAME = "Coverage", XMLPROJECTION = "ELEMENT");

Property DataElement As HS.FHIR.vSTU3.Model.Resource.DataElement(XMLNAME = "DataElement", XMLPROJECTION = "ELEMENT");

Property DetectedIssue As HS.FHIR.vSTU3.Model.Resource.DetectedIssue(XMLNAME = "DetectedIssue", XMLPROJECTION = "ELEMENT");

Property Device As HS.FHIR.vSTU3.Model.Resource.Device(XMLNAME = "Device", XMLPROJECTION = "ELEMENT");

Property DeviceComponent As HS.FHIR.vSTU3.Model.Resource.DeviceComponent(XMLNAME = "DeviceComponent", XMLPROJECTION = "ELEMENT");

Property DeviceMetric As HS.FHIR.vSTU3.Model.Resource.DeviceMetric(XMLNAME = "DeviceMetric", XMLPROJECTION = "ELEMENT");

Property DeviceRequest As HS.FHIR.vSTU3.Model.Resource.DeviceRequest(XMLNAME = "DeviceRequest", XMLPROJECTION = "ELEMENT");

Property DeviceUseStatement As HS.FHIR.vSTU3.Model.Resource.DeviceUseStatement(XMLNAME = "DeviceUseStatement", XMLPROJECTION = "ELEMENT");

Property DiagnosticReport As HS.FHIR.vSTU3.Model.Resource.DiagnosticReport(XMLNAME = "DiagnosticReport", XMLPROJECTION = "ELEMENT");

Property DocumentManifest As HS.FHIR.vSTU3.Model.Resource.DocumentManifest(XMLNAME = "DocumentManifest", XMLPROJECTION = "ELEMENT");

Property DocumentReference As HS.FHIR.vSTU3.Model.Resource.DocumentReference(XMLNAME = "DocumentReference", XMLPROJECTION = "ELEMENT");

Property EligibilityRequest As HS.FHIR.vSTU3.Model.Resource.EligibilityRequest(XMLNAME = "EligibilityRequest", XMLPROJECTION = "ELEMENT");

Property EligibilityResponse As HS.FHIR.vSTU3.Model.Resource.EligibilityResponse(XMLNAME = "EligibilityResponse", XMLPROJECTION = "ELEMENT");

Property Encounter As HS.FHIR.vSTU3.Model.Resource.Encounter(XMLNAME = "Encounter", XMLPROJECTION = "ELEMENT");

Property Endpoint As HS.FHIR.vSTU3.Model.Resource.Endpoint(XMLNAME = "Endpoint", XMLPROJECTION = "ELEMENT");

Property EnrollmentRequest As HS.FHIR.vSTU3.Model.Resource.EnrollmentRequest(XMLNAME = "EnrollmentRequest", XMLPROJECTION = "ELEMENT");

Property EnrollmentResponse As HS.FHIR.vSTU3.Model.Resource.EnrollmentResponse(XMLNAME = "EnrollmentResponse", XMLPROJECTION = "ELEMENT");

Property EpisodeOfCare As HS.FHIR.vSTU3.Model.Resource.EpisodeOfCare(XMLNAME = "EpisodeOfCare", XMLPROJECTION = "ELEMENT");

Property ExpansionProfile As HS.FHIR.vSTU3.Model.Resource.ExpansionProfile(XMLNAME = "ExpansionProfile", XMLPROJECTION = "ELEMENT");

Property ExplanationOfBenefit As HS.FHIR.vSTU3.Model.Resource.ExplanationOfBenefit(XMLNAME = "ExplanationOfBenefit", XMLPROJECTION = "ELEMENT");

Property FamilyMemberHistory As HS.FHIR.vSTU3.Model.Resource.FamilyMemberHistory(XMLNAME = "FamilyMemberHistory", XMLPROJECTION = "ELEMENT");

Property Flag As HS.FHIR.vSTU3.Model.Resource.Flag(XMLNAME = "Flag", XMLPROJECTION = "ELEMENT");

Property Goal As HS.FHIR.vSTU3.Model.Resource.Goal(XMLNAME = "Goal", XMLPROJECTION = "ELEMENT");

Property GraphDefinition As HS.FHIR.vSTU3.Model.Resource.GraphDefinition(XMLNAME = "GraphDefinition", XMLPROJECTION = "ELEMENT");

Property Group As HS.FHIR.vSTU3.Model.Resource.Group(XMLNAME = "Group", XMLPROJECTION = "ELEMENT");

Property GuidanceResponse As HS.FHIR.vSTU3.Model.Resource.GuidanceResponse(XMLNAME = "GuidanceResponse", XMLPROJECTION = "ELEMENT");

Property HealthcareService As HS.FHIR.vSTU3.Model.Resource.HealthcareService(XMLNAME = "HealthcareService", XMLPROJECTION = "ELEMENT");

Property ImagingManifest As HS.FHIR.vSTU3.Model.Resource.ImagingManifest(XMLNAME = "ImagingManifest", XMLPROJECTION = "ELEMENT");

Property ImagingStudy As HS.FHIR.vSTU3.Model.Resource.ImagingStudy(XMLNAME = "ImagingStudy", XMLPROJECTION = "ELEMENT");

Property Immunization As HS.FHIR.vSTU3.Model.Resource.Immunization(XMLNAME = "Immunization", XMLPROJECTION = "ELEMENT");

Property ImmunizationRecommendation As HS.FHIR.vSTU3.Model.Resource.ImmunizationRecommendation(XMLNAME = "ImmunizationRecommendation", XMLPROJECTION = "ELEMENT");

Property ImplementationGuide As HS.FHIR.vSTU3.Model.Resource.ImplementationGuide(XMLNAME = "ImplementationGuide", XMLPROJECTION = "ELEMENT");

Property Library As HS.FHIR.vSTU3.Model.Resource.Library(XMLNAME = "Library", XMLPROJECTION = "ELEMENT");

Property Linkage As HS.FHIR.vSTU3.Model.Resource.Linkage(XMLNAME = "Linkage", XMLPROJECTION = "ELEMENT");

Property List As HS.FHIR.vSTU3.Model.Resource.List(XMLNAME = "List", XMLPROJECTION = "ELEMENT");

Property Location As HS.FHIR.vSTU3.Model.Resource.Location(XMLNAME = "Location", XMLPROJECTION = "ELEMENT");

Property Measure As HS.FHIR.vSTU3.Model.Resource.Measure(XMLNAME = "Measure", XMLPROJECTION = "ELEMENT");

Property MeasureReport As HS.FHIR.vSTU3.Model.Resource.MeasureReport(XMLNAME = "MeasureReport", XMLPROJECTION = "ELEMENT");

Property Media As HS.FHIR.vSTU3.Model.Resource.Media(XMLNAME = "Media", XMLPROJECTION = "ELEMENT");

Property Medication As HS.FHIR.vSTU3.Model.Resource.Medication(XMLNAME = "Medication", XMLPROJECTION = "ELEMENT");

Property MedicationAdministration As HS.FHIR.vSTU3.Model.Resource.MedicationAdministration(XMLNAME = "MedicationAdministration", XMLPROJECTION = "ELEMENT");

Property MedicationDispense As HS.FHIR.vSTU3.Model.Resource.MedicationDispense(XMLNAME = "MedicationDispense", XMLPROJECTION = "ELEMENT");

Property MedicationRequest As HS.FHIR.vSTU3.Model.Resource.MedicationRequest(XMLNAME = "MedicationRequest", XMLPROJECTION = "ELEMENT");

Property MedicationStatement As HS.FHIR.vSTU3.Model.Resource.MedicationStatement(XMLNAME = "MedicationStatement", XMLPROJECTION = "ELEMENT");

Property MessageDefinition As HS.FHIR.vSTU3.Model.Resource.MessageDefinition(XMLNAME = "MessageDefinition", XMLPROJECTION = "ELEMENT");

Property MessageHeader As HS.FHIR.vSTU3.Model.Resource.MessageHeader(XMLNAME = "MessageHeader", XMLPROJECTION = "ELEMENT");

Property NamingSystem As HS.FHIR.vSTU3.Model.Resource.NamingSystem(XMLNAME = "NamingSystem", XMLPROJECTION = "ELEMENT");

Property NutritionOrder As HS.FHIR.vSTU3.Model.Resource.NutritionOrder(XMLNAME = "NutritionOrder", XMLPROJECTION = "ELEMENT");

Property Observation As HS.FHIR.vSTU3.Model.Resource.Observation(XMLNAME = "Observation", XMLPROJECTION = "ELEMENT");

Property OperationDefinition As HS.FHIR.vSTU3.Model.Resource.OperationDefinition(XMLNAME = "OperationDefinition", XMLPROJECTION = "ELEMENT");

Property OperationOutcome As HS.FHIR.vSTU3.Model.Resource.OperationOutcome(XMLNAME = "OperationOutcome", XMLPROJECTION = "ELEMENT");

Property Organization As HS.FHIR.vSTU3.Model.Resource.Organization(XMLNAME = "Organization", XMLPROJECTION = "ELEMENT");

Property Patient As HS.FHIR.vSTU3.Model.Resource.Patient(XMLNAME = "Patient", XMLPROJECTION = "ELEMENT");

Property PaymentNotice As HS.FHIR.vSTU3.Model.Resource.PaymentNotice(XMLNAME = "PaymentNotice", XMLPROJECTION = "ELEMENT");

Property PaymentReconciliation As HS.FHIR.vSTU3.Model.Resource.PaymentReconciliation(XMLNAME = "PaymentReconciliation", XMLPROJECTION = "ELEMENT");

Property Person As HS.FHIR.vSTU3.Model.Resource.Person(XMLNAME = "Person", XMLPROJECTION = "ELEMENT");

Property PlanDefinition As HS.FHIR.vSTU3.Model.Resource.PlanDefinition(XMLNAME = "PlanDefinition", XMLPROJECTION = "ELEMENT");

Property Practitioner As HS.FHIR.vSTU3.Model.Resource.Practitioner(XMLNAME = "Practitioner", XMLPROJECTION = "ELEMENT");

Property PractitionerRole As HS.FHIR.vSTU3.Model.Resource.PractitionerRole(XMLNAME = "PractitionerRole", XMLPROJECTION = "ELEMENT");

Property Procedure As HS.FHIR.vSTU3.Model.Resource.Procedure(XMLNAME = "Procedure", XMLPROJECTION = "ELEMENT");

Property ProcedureRequest As HS.FHIR.vSTU3.Model.Resource.ProcedureRequest(XMLNAME = "ProcedureRequest", XMLPROJECTION = "ELEMENT");

Property ProcessRequest As HS.FHIR.vSTU3.Model.Resource.ProcessRequest(XMLNAME = "ProcessRequest", XMLPROJECTION = "ELEMENT");

Property ProcessResponse As HS.FHIR.vSTU3.Model.Resource.ProcessResponse(XMLNAME = "ProcessResponse", XMLPROJECTION = "ELEMENT");

Property Provenance As HS.FHIR.vSTU3.Model.Resource.Provenance(XMLNAME = "Provenance", XMLPROJECTION = "ELEMENT");

Property Questionnaire As HS.FHIR.vSTU3.Model.Resource.Questionnaire(XMLNAME = "Questionnaire", XMLPROJECTION = "ELEMENT");

Property QuestionnaireResponse As HS.FHIR.vSTU3.Model.Resource.QuestionnaireResponse(XMLNAME = "QuestionnaireResponse", XMLPROJECTION = "ELEMENT");

Property ReferralRequest As HS.FHIR.vSTU3.Model.Resource.ReferralRequest(XMLNAME = "ReferralRequest", XMLPROJECTION = "ELEMENT");

Property RelatedPerson As HS.FHIR.vSTU3.Model.Resource.RelatedPerson(XMLNAME = "RelatedPerson", XMLPROJECTION = "ELEMENT");

Property RequestGroup As HS.FHIR.vSTU3.Model.Resource.RequestGroup(XMLNAME = "RequestGroup", XMLPROJECTION = "ELEMENT");

Property ResearchStudy As HS.FHIR.vSTU3.Model.Resource.ResearchStudy(XMLNAME = "ResearchStudy", XMLPROJECTION = "ELEMENT");

Property ResearchSubject As HS.FHIR.vSTU3.Model.Resource.ResearchSubject(XMLNAME = "ResearchSubject", XMLPROJECTION = "ELEMENT");

Property RiskAssessment As HS.FHIR.vSTU3.Model.Resource.RiskAssessment(XMLNAME = "RiskAssessment", XMLPROJECTION = "ELEMENT");

Property Schedule As HS.FHIR.vSTU3.Model.Resource.Schedule(XMLNAME = "Schedule", XMLPROJECTION = "ELEMENT");

Property SearchParameter As HS.FHIR.vSTU3.Model.Resource.SearchParameter(XMLNAME = "SearchParameter", XMLPROJECTION = "ELEMENT");

Property Sequence As HS.FHIR.vSTU3.Model.Resource.Sequence(XMLNAME = "Sequence", XMLPROJECTION = "ELEMENT");

Property ServiceDefinition As HS.FHIR.vSTU3.Model.Resource.ServiceDefinition(XMLNAME = "ServiceDefinition", XMLPROJECTION = "ELEMENT");

Property Slot As HS.FHIR.vSTU3.Model.Resource.Slot(XMLNAME = "Slot", XMLPROJECTION = "ELEMENT");

Property Specimen As HS.FHIR.vSTU3.Model.Resource.Specimen(XMLNAME = "Specimen", XMLPROJECTION = "ELEMENT");

Property StructureDefinition As HS.FHIR.vSTU3.Model.Resource.StructureDefinition(XMLNAME = "StructureDefinition", XMLPROJECTION = "ELEMENT");

Property StructureMap As HS.FHIR.vSTU3.Model.Resource.StructureMap(XMLNAME = "StructureMap", XMLPROJECTION = "ELEMENT");

Property Subscription As HS.FHIR.vSTU3.Model.Resource.Subscription(XMLNAME = "Subscription", XMLPROJECTION = "ELEMENT");

Property Substance As HS.FHIR.vSTU3.Model.Resource.Substance(XMLNAME = "Substance", XMLPROJECTION = "ELEMENT");

Property SupplyDelivery As HS.FHIR.vSTU3.Model.Resource.SupplyDelivery(XMLNAME = "SupplyDelivery", XMLPROJECTION = "ELEMENT");

Property SupplyRequest As HS.FHIR.vSTU3.Model.Resource.SupplyRequest(XMLNAME = "SupplyRequest", XMLPROJECTION = "ELEMENT");

Property Task As HS.FHIR.vSTU3.Model.Resource.Task(XMLNAME = "Task", XMLPROJECTION = "ELEMENT");

Property TestReport As HS.FHIR.vSTU3.Model.Resource.TestReport(XMLNAME = "TestReport", XMLPROJECTION = "ELEMENT");

Property TestScript As HS.FHIR.vSTU3.Model.Resource.TestScript(XMLNAME = "TestScript", XMLPROJECTION = "ELEMENT");

Property ValueSet As HS.FHIR.vSTU3.Model.Resource.ValueSet(XMLNAME = "ValueSet", XMLPROJECTION = "ELEMENT");

Property VisionPrescription As HS.FHIR.vSTU3.Model.Resource.VisionPrescription(XMLNAME = "VisionPrescription", XMLPROJECTION = "ELEMENT");

Property Parameters As HS.FHIR.vSTU3.Model.Resource.Parameters(XMLNAME = "Parameters", XMLPROJECTION = "ELEMENT");

/// Get new object, populated with specified data.
Method %OnNew(pResource As HS.FHIR.vSTU3.Model.Base.Resource) As %Status
{
	Set tSC = $$$OK
	Try {
		If ($Data(pResource)=0) Quit
		Set tSC = ..SetResource(pResource) Quit:$$$ISERR(tSC)
		Set tSC = ..%ValidateObject()
	} Catch ex {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
}

/// Set method for the resource invariant property.
Method SetResource(pResource As HS.FHIR.vSTU3.Model.Base.Resource) As %Status
{
	Set tSC = $$$OK
	Try {
		If ($Data(pResource)=0) Quit
		Set $Property($this, pResource.%ClassName()) = pResource
		Set tSC = ..%ValidateObject()
	} Catch ex {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
}

/// GetResourceType returns the name of the resource property that is populated for the current instance of ResourceContainer.
Method GetResourceType() As %String [ CodeMode = objectgenerator ]
{
	#; Set the root class name for FHIR resources.
	Set tHSFHIRResource = "HS.FHIR.vSTU3.Model.Resource."
	Set tHSFHIRResourceLL = $Length(tHSFHIRResource)
	Set tHSFHIRResourceLP = $Length(tHSFHIRResource,".")
	
	Set tSkipList("%Concurrency") = 1
	
	#; Designate the more commonly used resource types to be checked first.
	Set i = 0
	Set tPreList($i(i)) = "Patient"
	Set tPreList($i(i)) = "Encounter"
	Set tPreList($i(i)) = "Observation"
	Set tPreList($i(i)) = "DiagnosticReport"
	Set tPreList($i(i)) = "AllergyIntolerance"
	Set tPreList($i(i)) = "Condition"
	Set tPreList($i(i)) = "Practitioner"
	Set tPreList($i(i)) = "Medication"
	Set tPreList($i(i)) = "MedicationRequest"
	Set tPreList($i(i)) = "MedicationDispense"
	Set tPreList($i(i)) = "DocumentReference"
	Set tPreList($i(i)) = "DocumentManifest"
	Set tPreList($i(i)) = "Binary"
	Set tPreList = i
	
	For i = 1:1:tPreList {
		Do %code.WriteLine(" If r%"_tPreList(i)_" Quit """_tPreList(i)_"""")
		Set tPreList(tPreList(i)) = ""
	}
	
	For i = 1:1:%compiledclass.Properties.Count() {
		Set tPropDef = %compiledclass.Properties.GetAt(i)
		If ('$D(tSkipList(tPropDef.Name))&&($E(tPropDef.Name,1,2)'="%%"))&&('$D(tPreList(tPropDef.Name))) {
			If ($Extract(tPropDef.Type,1,tHSFHIRResourceLL)=tHSFHIRResource)&&($Length(tPropDef.Type,".")=tHSFHIRResourceLP) {
				Do %code.WriteLine(" If r%"_tPropDef.Name_" Quit """_tPropDef.Name_"""")
			}
		}
	}
	
	Do %code.WriteLine(" Quit """"")
	
	Quit $$$OK
}

/// GetResource returns a pointer to the resource for the current instance of ResourceContainer.
Method GetResource() As HS.FHIR.vSTU3.Model.Base.Resource
{
	Set tReturnResource = ""
	Set tResourceType = ..GetResourceType()
	If tResourceType'="" Set tReturnResource = $Property($this, tResourceType)
	Quit tReturnResource
}

}
