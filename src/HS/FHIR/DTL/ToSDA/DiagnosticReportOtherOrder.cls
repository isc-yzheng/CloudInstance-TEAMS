Class HS.FHIR.DTL.ToSDA.DiagnosticReportOtherOrder Extends Ens.DataTransformDTL [ DependsOn = (HS.FHIR.vDSTU2.Model.Resource.DiagnosticReport, HS.SDA3.OtherOrder) ]
{

Parameter IGNOREMISSINGSOURCE = 1;

Parameter REPORTERRORS = 1;

Parameter TREATEMPTYREPEATINGFIELDASNULL = 0;

XData DTL [ XMLNamespace = "http://www.intersystems.com/dtl" ]
{
<transform sourceClass='HS.FHIR.vDSTU2.Model.Resource.DiagnosticReport' targetClass='HS.SDA3.OtherOrder' create='new' language='objectscript' >
<annotation>This transform uses the reserved DTL input parameter named &#39;aux&#39;.
For this transform, aux is a local array of strings.  The values held in aux were generated by the FHIR to SDA DTL framework prior to calling into this transform.
aux("EncounterNumbers", fhir_resource_id) = SDA EncounterNumber to use for the encounter pointed to by the FHIR resource.</annotation>
<code>
<![CDATA[ set iDiagnosticReport = 1]]></code>
<foreach property='source.request()' key='k3' >
<if condition='(iDiagnosticReport=1) &amp;&amp; (..StartsWith(source.request.(k3).reference.value,"#"))' >
<true>
<foreach property='source.contained()' key='k4' >
<if condition='("#"_source.contained.(k4).DiagnosticOrder.id.value = source.request.(k3).reference.value)' >
<true>
<subtransform class='HS.FHIR.DTL.ToSDA.DiagnosticOrder' targetObj='target' sourceObj='source.contained.(k4).DiagnosticOrder' />
<code>
<![CDATA[ set iDiagnosticReport = 0]]></code>
</true>
</if>
</foreach>
</true>
</if>
</foreach>
<assign value='##class(HS.FHIR.DTL.Utils).LookupFHIR("ToSDADiagnosticReportStatus",source.status.value,"V",3)' property='target.Status' action='set' />
<if condition='$IsObject(source.category)' >
<true>
<assign value='source.category.text.value' property='target.OrderCategory.OriginalText' action='set' />
<if condition='source.category.coding.Count() &gt; 0' >
<true>
<assign value='source.category.coding.(1).display.value' property='target.OrderCategory.Description' action='set' />
<assign value='source.category.coding.(1).code.value' property='target.OrderCategory.Code' action='set' />
<assign value='source.category.coding.(1).version.value' property='target.OrderCategory.CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.category.coding.(1).system.value)' property='target.OrderCategory.SDACodingStandard' action='set' />
</true>
</if>
</true>
</if>
<if condition='$IsObject(source.code)' >
<true>
<assign value='source.code.text.value' property='target.OrderItem.OriginalText' action='set' />
<if condition='source.code.coding.Count() &gt; 0' >
<true>
<assign value='source.code.coding.(1).display.value' property='target.OrderItem.Description' action='set' />
<assign value='source.code.coding.(1).code.value' property='target.OrderItem.Code' action='set' />
<assign value='source.code.coding.(1).version.value' property='target.OrderItem.CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.code.coding.(1).system.value)' property='target.OrderItem.SDACodingStandard' action='set' />
</true>
</if>
</true>
</if>
<if condition='..Piece(source.encounter.reference.value,"Encounter/",2) &apos;= ""' >
<true>
<assign value='$G(aux("EncounterNumbers",..Piece(source.encounter.reference.value,"Encounter/",2)))' property='target.EncounterNumber' action='set' />
</true>
</if>
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveDateTime.value)' property='target.SpecimenCollectedTime' action='set' disabled='1' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectivePeriod.end.value)' property='target.SpecimenCollectedTime' action='set' disabled='1' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.issued.value)' property='target.SpecimenReceivedTime' action='set' disabled='1' />
<assign value='source.status.value' property='target.Result.ResultStatus' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectivePeriod.start.value)' property='target.Result.FromTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectivePeriod.end.value)' property='target.Result.ToTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveDateTime.value)' property='target.Result.FromTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveDateTime.value)' property='target.Result.ToTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.issued.value)' property='target.Result.AuthorizationTime' action='set' />
<if condition='..StartsWith(source.performer.reference.value,"#")' >
<true>
<foreach property='source.contained()' key='k2' >
<if condition='("#"_source.contained.(k2).Practitioner.id.value=source.performer.reference.value)' >
<true>
<subtransform class='HS.FHIR.DTL.ToSDA.SubTransform.Practitioner' targetObj='target.VerifiedBy' sourceObj='source.contained.(k2).Practitioner' />
<subtransform class='HS.FHIR.DTL.ToSDA.SubTransform.Practitioner' targetObj='target.Result.VerifiedBy' sourceObj='source.contained.(k2).Practitioner' />
</true>
</if>
</foreach>
</true>
</if>
<code>
<![CDATA[ set iSpecimen = 1]]></code>
<foreach property='source.specimen()' key='k5' >
<if condition='..StartsWith(source.specimen.(k5).reference.value,"#")' >
<true>
<foreach property='source.contained()' key='k6' disabled='1' >
<if condition='("#"_source.contained.(k6).Specimen.id.value = source.specimen.(k5).reference.value)' >
<true>
<subtransform class='HS.FHIR.DTL.ToSDA.SubTransform.Specimen' targetObj='target.Specimens.(iSpecimen)' sourceObj='source.contained.(k5).Specimen' />
<code>
<![CDATA[ set iSpecimen=iSpecimen+1]]></code>
</true>
</if>
</foreach>
</true>
</if>
</foreach>
<assign value='source.conclusion.value' property='target.Result.ResultInterpretation' action='set' />
<code>
<![CDATA[ set iResultItem = 1]]></code>
<foreach property='source.result()' key='k7' >
<if condition='..StartsWith(source.result.(k7).reference.value,"#")' >
<true>
<foreach property='source.contained()' key='k8' >
<if condition='("#"_source.contained.(k8).Observation.id.value = source.result.(k7).reference.value)' >
<true>
<assign value='"IM"' property='target.Result.ResultType' action='set' />
<if condition='($IsObject(source.contained.(k8).Observation.valueQuantity))' >
<true>
<assign value='source.contained.(k8).Observation.valueQuantity.value.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueCodeableConcept))' >
<true>
<assign value='source.contained.(k8).Observation.valueCodeableConcept.text.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueAttachment))' >
<true>
<assign value='source.contained.(k8).Observation.valueAttachment.title.value' property='target.Result.ResultText' action='set' />
<assign value='source.contained.(k8).Observation.valueAttachment.data.value' property='target.Result.Stream' action='set' />
<assign value='source.contained.(k8).Observation.valueAttachment.url.value' property='target.Result.DocumentURL' action='set' />
<assign value='source.contained.(k8).Observation.valueAttachment.title.value' property='target.Result.DocumentName' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.contained.(k8).Observation.valueAttachment.creation.value)' property='target.Result.ResultTime' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueRange)) ' >
<true>
<assign value='"From: "_source.contained.(k8).Observation.valueRange.low.value.value_" To: "_source.contained.(k8).Observation.valueRange.high.value.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueRatio))' >
<true>
<assign value='source.contained.(k8).Observation.valueRatio.numerator.value.value_" of "_source.contained.(k8).Observation.valueRatio.denominator.value.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueString)) ' >
<true>
<assign value='source.contained.(k8).Observation.valueString.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueSampledData)) ' >
<true>
<assign value='source.contained.(k8).Observation.valueSampledData.data.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueTime))' >
<true>
<assign value='source.contained.(k8).Observation.valueTime.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valueDateTime)) ' >
<true>
<assign value='source.contained.(k8).Observation.valueDateTime.value' property='target.Result.ResultText' action='set' />
</true>
<false>
<if condition='($IsObject(source.contained.(k8).Observation.valuePeriod)) ' >
<true>
<assign value='"From: "_source.contained.(k8).Observation.valuePeriod.start.value_" To: "_source.contained.(k8).Observation.valuePeriod.end.value' property='target.Result.ResultText' action='set' />
</true>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</true>
</if>
</foreach>
</true>
</if>
</foreach>
</transform>
}

}
