Class HS.FHIR.DTL.ToSDA.MedicationAdministration Extends Ens.DataTransformDTL [ DependsOn = (HS.FHIR.vDSTU2.Model.Resource.MedicationAdministration, HS.SDA3.Medication) ]
{

Parameter IGNOREMISSINGSOURCE = 1;

Parameter REPORTERRORS = 1;

Parameter TREATEMPTYREPEATINGFIELDASNULL = 0;

XData DTL [ XMLNamespace = "http://www.intersystems.com/dtl" ]
{
<transform sourceClass='HS.FHIR.vDSTU2.Model.Resource.MedicationAdministration' targetClass='HS.SDA3.Medication' create='existing' language='objectscript' >
<annotation>This transform uses the reserved DTL input parameter named &#39;aux&#39;.
For this transform, aux is a local array of strings.  The values held in aux were generated by the FHIR to SDA DTL framework prior to calling into this transform.
aux("EncounterNumbers", fhir_resource_id) = SDA EncounterNumber to use for the encounter pointed to by the FHIR resource.
aux("MedicationAdministrationPosition") = Position of this SDA3 Administration in the SDA3 Medication Administrations list property.</annotation>
<code>
<![CDATA[ set iMedAdminPos = aux("MedicationAdministrationPosition")]]></code>
<if condition='..Piece(source.encounter.reference.value,"Encounter/",2) &apos;= ""' >
<true>
<assign value='$G(aux("EncounterNumbers",..Piece(source.encounter.reference.value,"Encounter/",2)))' property='target.EncounterNumber' action='set' />
</true>
</if>
<if condition='..StartsWith(source.practitioner.reference.value,"#")' >
<true>
<foreach property='source.contained()' key='k3' >
<if condition='("#"_source.contained.(k3).Practitioner.id.value=source.practitioner.reference.value)' >
<true>
<subtransform class='HS.FHIR.DTL.ToSDA.SubTransform.Practitioner' targetObj='target.Administrations.(iMedAdminPos).AdministeringProvider' sourceObj='source.contained.(k3).Practitioner' />
</true>
</if>
</foreach>
</true>
</if>
<if condition='source.wasNotGiven.value = 1' >
<true>
<assign value='source.reasonNotGiven.(1).text.value' property='target.Administrations.(iMedAdminPos).RefusalReason.OriginalText' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.reasonNotGiven.(1).coding.(1).system.value)' property='target.Administrations.(iMedAdminPos).RefusalReason.SDACodingStandard' action='set' />
<assign value='source.reasonNotGiven.(1).coding.(1).version.value' property='target.Administrations.(iMedAdminPos).RefusalReason.CodeSystemVersionId' action='set' />
<assign value='source.reasonNotGiven.(1).coding.(1).code.value' property='target.Administrations.(iMedAdminPos).RefusalReason.Code' action='set' />
<assign value='source.reasonNotGiven.(1).coding.(1).display.value' property='target.Administrations.(iMedAdminPos).RefusalReason.Description' action='set' />
</true>
</if>
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveTimePeriod.start.value)' property='target.Administrations.(iMedAdminPos).FromTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveTimePeriod.end.value)' property='target.Administrations.(iMedAdminPos).ToTime' action='set' />
<assign value='source.dosage.text.value' property='target.Administrations.(iMedAdminPos).AdministrationNotes' action='set' />
<assign value='source.dosage.siteCodeableConcept.text.value' property='target.Administrations.(iMedAdminPos).AdministrationSite.OriginalText' action='set' />
<assign value='source.dosage.siteCodeableConcept.coding.(1).display.value' property='target.Administrations.(iMedAdminPos).AdministrationSite.Description' action='set' />
<assign value='source.dosage.siteCodeableConcept.coding.(1).code.value' property='target.Administrations.(iMedAdminPos).AdministrationSite.Code' action='set' />
<assign value='source.dosage.siteCodeableConcept.coding.(1).version.value' property='target.Administrations.(iMedAdminPos).AdministrationSite.CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.dosage.siteCodeableConcept.coding.(1).system.value)' property='target.Administrations.(iMedAdminPos).AdministrationSite.SDACodingStandard' action='set' />
<assign value='source.dosage.quantity.value.value' property='target.Administrations.(iMedAdminPos).AdministeredAmount' action='set' />
<assign value='source.dosage.quantity.unit.value' property='target.Administrations.(iMedAdminPos).AdministeredUnits' action='set' />
<assign value='..Strip(source.encounter.reference.value,"&lt;","Encounter/")' property='target.Administrations.(iMedAdminPos).EncounterNumber' action='set' />
</transform>
}

}
