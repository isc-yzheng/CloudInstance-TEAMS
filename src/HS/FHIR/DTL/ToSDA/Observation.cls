Class HS.FHIR.DTL.ToSDA.Observation Extends Ens.DataTransformDTL [ DependsOn = (HS.FHIR.vDSTU2.Model.Resource.Observation, HS.SDA3.Observation) ]
{

Parameter IGNOREMISSINGSOURCE = 1;

Parameter REPORTERRORS = 1;

Parameter TREATEMPTYREPEATINGFIELDASNULL = 0;

XData DTL [ XMLNamespace = "http://www.intersystems.com/dtl" ]
{
<transform sourceClass='HS.FHIR.vDSTU2.Model.Resource.Observation' targetClass='HS.SDA3.Observation' create='new' language='objectscript' >
<annotation>This transform uses the reserved DTL input parameter named &#39;aux&#39;.
For this transform, aux is a local array of strings.  The values held in aux were generated by the FHIR to SDA DTL framework prior to calling into this transform.
aux("EncounterNumbers", fhir_resource_id) = SDA EncounterNumber to use for the encounter pointed to by the FHIR resource.</annotation>
<if condition='source.identifier.Count()&gt;0' >
<true>
<assign value='source.identifier.(1).value.value' property='target.ExternalId' action='set' />
</true>
</if>
<assign value='source.code.text.value' property='target.ObservationCode.OriginalText' action='set' />
<if condition='$IsObject(source.code.coding) &amp;&amp; (source.code.coding.Count() &gt; 0)' >
<true>
<assign value='source.code.coding.(1).code.value' property='target.ObservationCode.Code' action='set' />
<assign value='source.code.coding.(1).display.value' property='target.ObservationCode.Description' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.code.coding.(1).system.value)' property='target.ObservationCode.SDACodingStandard' action='set' />
<assign value='source.code.coding.(1).version.value' property='target.ObservationCode.CodeSystemVersionId' action='set' />
<assign value='source.valueQuantity.code.value' property='target.ObservationCode.ObservationValueUnits.Code' action='set' />
<assign value='source.valueQuantity.unit.value' property='target.ObservationCode.ObservationValueUnits.Description' action='set' />
</true>
</if>
<if condition='..Piece(source.encounter.reference.value,"Encounter/",2) &apos;= ""' >
<true>
<assign value='$G(aux("EncounterNumbers",..Piece(source.encounter.reference.value,"Encounter/",2)))' property='target.EncounterNumber' action='set' />
</true>
</if>
<if condition='source.effectiveDateTime &apos;= ""' >
<true>
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveDateTime.value)' property='target.ObservationTime' action='set' />
</true>
<false>
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectivePeriod.end.value)' property='target.ObservationTime' action='set' />
</false>
</if>
<code>
<![CDATA[ set iClinician = 1]]></code>
<foreach property='source.performer()' key='k2' >
<if condition='..StartsWith(source.performer.(k2).reference.value,"#")' >
<true>
<foreach property='source.contained()' key='k3' >
<if condition='("#"_source.contained.(k3).Practitioner.id.value=source.performer.(k2).reference.value) &amp;&amp; (iClinician=1)' >
<true>
<subtransform class='HS.FHIR.DTL.ToSDA.SubTransform.Practitioner' targetObj='target.Clinician' sourceObj='source.contained.(k3).Practitioner' />
<code>
<![CDATA[ set iClinician = 0]]></code>
</true>
</if>
</foreach>
</true>
</if>
</foreach>

<assign value='source.comments.value' property='target.Comments' action='set' />

<if condition='$IsObject(source.valueQuantity)'>
<true>
<assign value='source.valueQuantity.value.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueCodeableConcept)'>
<true>
<assign value='source.valueCodeableConcept.coding.(1).display.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueString)'>
<true>
<assign value='source.valueString.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueRange)'>
<true>
<assign value='"From: "_source.valueRange.low.value.value_" / To: "_source.valueRange.high.value.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueRatio)'>
<true>
<assign value='source.valueRatio.numerator.value.value_" / "_source.valueRatio.denominator.value.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueSampledData)'>
<true>
<assign value='source.valueSampledData.data.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueAttachment)'>
<true>
<assign value='source.valueAttachment.data.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueTime)'>
<true>
<assign value='source.valueTime.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueDateTime)'>
<true>
<assign value='source.valueDateTime.value' property='target.ObservationValue' action='set' />
</true>
<false>
<if condition='$IsObject(source.valuePeriod)'>
<true>
<assign value='"From: "_source.valuePeriod.start.value_" / To:"_source.valuePeriod.end.value' property='target.ObservationValue' action='set' />
</true>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>

<assign value='source.method.text.value' property='target.ObservationMethods.(1).OriginalText' action='set' />
<if condition='($IsObject(source.method.coding)) &amp;&amp; (source.method.coding.Count() &gt; 0)' >
<true>
<assign value='source.method.coding.(1).display.value' property='target.ObservationMethods.(1).Description' action='set' />
<assign value='source.method.coding.(1).code.value' property='target.ObservationMethods.(1).Code' action='set' />
<assign value='source.method.coding.(1).version.value' property='target.ObservationMethods.(1).CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.method.coding.(1).system.value)' property='target.ObservationMethods.(1).SDACodingStandard' action='set' />
</true>
</if>
</transform>
}

}
