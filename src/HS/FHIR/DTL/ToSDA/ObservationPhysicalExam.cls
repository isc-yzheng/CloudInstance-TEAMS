Class HS.FHIR.DTL.ToSDA.ObservationPhysicalExam Extends Ens.DataTransformDTL [ DependsOn = (HS.FHIR.vDSTU2.Model.Resource.Observation, HS.SDA3.PhysicalExam) ]
{

Parameter IGNOREMISSINGSOURCE = 1;

Parameter REPORTERRORS = 1;

Parameter TREATEMPTYREPEATINGFIELDASNULL = 0;

XData DTL [ XMLNamespace = "http://www.intersystems.com/dtl" ]
{
<transform sourceClass='HS.FHIR.vDSTU2.Model.Resource.Observation' targetClass='HS.SDA3.PhysicalExam' create='new' language='objectscript' >
<annotation>This transform uses the reserved DTL input parameter named &#39;aux&#39;.
For this transform, aux is a local array of strings.  The values held in aux were generated by the FHIR to SDA DTL framework prior to calling into this transform.
aux("EncounterNumbers", fhir_resource_id) = SDA EncounterNumber to use for the encounter pointed to by the FHIR resource.</annotation>
<if condition='source.identifier.Count()&gt;0' >
<true>
<assign value='source.identifier.(1).value.value' property='target.ExternalId' action='set' />
</true>
</if>
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectiveDateTime.value)' property='target.PhysExamTime' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).NormalizeTimeStamp(source.effectivePeriod.end.value)' property='target.PhysExamTime' action='set' />
<if condition='..Piece(source.encounter.reference.value,"Encounter/",2) &apos;= ""' >
<true>
<assign value='$G(aux("EncounterNumbers",..Piece(source.encounter.reference.value,"Encounter/",2)))' property='target.EncounterNumber' action='set' />
</true>
</if>
<assign value='source.code.text.value' property='target.PhysExamObs.OriginalText' action='set' />
<if condition='($IsObject(source.code.coding)) &amp;&amp; (source.code.coding.Count() &gt; 0)' >
<true>
<assign value='source.code.coding.(1).display.value' property='target.PhysExamObs.Description' action='set' />
<assign value='source.code.coding.(1).code.value' property='target.PhysExamObs.Code' action='set' />
<assign value='source.code.coding.(1).version.value' property='target.PhysExamObs.CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.code.coding.(1).system.value)' property='target.PhysExamObs.SDACodingStandard' action='set' />
</true>
</if>
<assign value='source.bodySite.text.value' property='target.PhysExamCode.OriginalText' action='set' />
<if condition='($IsObject(source.bodySite.coding)) &amp;&amp; (source.bodySite.coding.Count() &gt; 0)' >
<true>
<assign value='source.bodySite.coding.(1).display.value' property='target.PhysExamCode.Description' action='set' />
<assign value='source.bodySite.coding.(1).code.value' property='target.PhysExamCode.Code' action='set' />
<assign value='source.bodySite.coding.(1).version.value' property='target.PhysExamCode.CodeSystemVersionId' action='set' />
<assign value='source.bodySite.coding.(1).system.value' property='target.PhysExamCode.SDACodingStandard' action='set' />
</true>
</if>
<assign value='source.comments.value' property='target.NoteText' action='set' />
<if condition='$IsObject(source.valueQuantity)' >
<true>
<assign value='source.valueQuantity.value.value_" "_source.valueQuantity.unit.value' property='target.PhysExamObsValue.Description' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.valueQuantity.system.value)' property='target.PhysExamObsValue.SDACodingStandard' action='set' />
<assign value='source.valueQuantity.code.value' property='target.PhysExamObsValue.Code' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueCodeableConcept)' >
<true>
<assign value='source.valueCodeableConcept.text.value' property='target.PhysExamObsValue.OriginalText' action='set' />
<if condition='source.valueCodeableConcept.coding.Count() &gt; 0' >
<true>
<assign value='source.valueCodeableConcept.coding.(1).display.value' property='target.PhysExamObsValue.Description' action='set' />
<assign value='source.valueCodeableConcept.coding.(1).code.value' property='target.PhysExamObsValue.Code' action='set' />
<assign value='source.valueCodeableConcept.coding.(1).version.value' property='target.PhysExamObsValue.CodeSystemVersionId' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).GetCodeForURI(source.valueCodeableConcept.coding.(1).system.value)' property='target.PhysExamObsValue.CodeSystemVersionId' action='set' />
</true>
</if>
</true>
<false>
<if condition='$IsObject(source.valueString)' >
<true>
<assign value='source.valueString.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueRange)' >
<true>
<assign value='"From: "_source.valueRange.low.value.value_" To: "_source.valueRange.high.value.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueRatio)' >
<true>
<assign value='source.valueRatio.numerator_" / "_source.valueRatio.denominator' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueSampledData)' >
<true>
<assign value='source.valueSampledData.data.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueAttachment)' >
<true>
<assign value='source.valueAttachment.data.id' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueTime)' >
<true>
<assign value='source.valueTime.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valueDateTime)' >
<true>
<assign value='source.valueDateTime.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
<false>
<if condition='$IsObject(source.valuePeriod)' >
<true>
<assign value='"From: "_source.valuePeriod.start.value_" To: "_source.valuePeriod.end.value' property='target.PhysExamObsValue.Description' action='set' />
</true>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</false>
</if>
</transform>
}

}
