Class HS.FHIR.DTL.FromSDA.OtherOrderDiagnosticReport Extends Ens.DataTransformDTL [ DependsOn = (HS.SDA3.OtherOrder, HS.FHIR.vDSTU2.Model.Resource.DiagnosticReport) ]
{

Parameter IGNOREMISSINGSOURCE = 1;

Parameter REPORTERRORS = 1;

Parameter TREATEMPTYREPEATINGFIELDASNULL = 0;

XData DTL [ XMLNamespace = "http://www.intersystems.com/dtl" ]
{
<transform sourceClass='HS.SDA3.OtherOrder' targetClass='HS.FHIR.vDSTU2.Model.Resource.DiagnosticReport' create='new' language='objectscript' >
<annotation>This transform uses the reserved DTL input parameter named &#39;aux&#39;.
For this transform, aux is a local array of strings.  The values held in aux were generated by the SDA to FHIR DTL framework prior to calling into this transform.
aux("ResourceId"): FHIR resource id to assign to the resource being created by this transform.
aux("PatientResourceId"): FHIR resource id for the patient represented by the Patient object in the SDA Container being transformed.
aux("EncounterResourceIds", sda_encounter_number) = FHIR resource id for the Encounters from the SDA Container.
aux("OrderResourceId"): FHIR resource id to be used for the FHIR DiagnosticOrder created from the SDA LabOrder, RadOrder or OtherOrder.
aux("ResultResourceId"): FHIR resource id to be used for the FHIR Observation resource for the SDA Result (not ResultItem).
aux("ResultItemResourceIds", n): FHIR resource ids to be used for the FHIR Observation resources for the SDA LabResultItems.</annotation>
<assign value='$G(aux("ResourceId"))' property='target.id.value' action='set' />
<if condition='source.ExternalId &apos;= ""' >
<true>
<assign value='"official"' property='target.identifier.(1).use.value' action='set' />
<assign value='"ExternalId"' property='target.identifier.(1).type.text.value' action='set' />
<assign value='source.ExternalId' property='target.identifier.(1).value.value' action='set' />
</true>
</if>
<assign value='##class(HS.FHIR.DTL.Utils).LookupFHIR("FromSDALabOrderDiagnosticReportStatus",source.Status,"final",3)' property='target.status.value' action='set' />
<if condition='##class(HS.FHIR.DTL.Utils).CTIsDefined(source,"OrderCategory")' >
<true>
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.CodeTableTranslated' targetObj='target.category' sourceObj='source.OrderCategory' />
</true>
</if>
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.CodeTableTranslated' targetObj='target.code' sourceObj='source.OrderItem' />
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.PatientReference' targetObj='target.subject' sourceObj='target' aux='.aux' />
<if condition='(source.EncounterNumber &apos;= "") &amp;&amp; ($G(aux("EncounterResourceIds",source.EncounterNumber)) &apos;= "")' >
<true>
<assign value='"Encounter/"_aux("EncounterResourceIds",source.EncounterNumber)' property='target.encounter.reference.value' action='set' />
<assign value='source.EncounterNumber' property='target.encounter.display.value' action='set' />
</true>
</if>
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.EnteredOn)' property='target.effectiveDateTime.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRInstant(source.EnteredOn)' property='target.issued.value' action='set' />
<code>
<![CDATA[ set iContained = 1]]></code>
<assign value='$G(aux("ResultResourceId"))' property='target.contained.(iContained).Observation.id.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.FromTime)' property='target.contained.(iContained).Observation.effectivePeriod.start.value' action='set' />
<assign value='source.Result.ResultText' property='target.result.(1).display.value' action='set' />
<assign value='"#"_$G(aux("ResultResourceId"))' property='target.result.(1).reference.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.ToTime)' property='target.contained.(iContained).Observation.effectivePeriod.end.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRInstant(source.Result.ResultTime)' property='target.contained.(iContained).Observation.issued.value' action='set' />
<assign value='source.Result.DocumentName' property='target.contained.(iContained).Observation.valueAttachment.title.value' action='set' />
<assign value='source.Result.DocumentURL' property='target.contained.(iContained).Observation.valueAttachment.url.value' action='set' />
<assign value='source.Result.Stream' property='target.contained.(iContained).Observation.valueAttachment.data.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.ResultTime)' property='target.contained.(iContained).Observation.valueAttachment.creation.value' action='set' />
<code>
<![CDATA[ set iContained = iContained + 1]]></code>
<if condition='source.Result.ResultType = "IM"' disabled='1' >
<false>
<foreach property='source.Result.ResultItems()' key='k2' disabled='1' >
<assign value='"#"_$G(aux("ResultItemResourceIds",k2))' property='target.result.(k2).reference.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.FromTime)' property='target.contained.(iContained).Observation.effectivePeriod.start.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.ToTime)' property='target.contained.(iContained).Observation.effectivePeriod.end.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRInstant(source.Result.ResultTime)' property='target.contained.(iContained).Observation.issued.value' action='set' />
<assign value='##class(HS.FHIR.DTL.Utils).FHIRDateTime(source.Result.ResultTime)' property='target.contained.(iContained).Observation.valueAttachment.creation.value' action='set' />
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.LabResultItem' targetObj='target.contained.(iContained).Observation' sourceObj='source.Result.ResultItems.(k2)' />
<assign value='$G(aux("ResultItemResourceIds",k2))' property='target.contained.(iContained).Observation.id.value ' action='set' />
<code>
<![CDATA[ set iContained = iContained + 1 	]]></code>
</foreach>
</false>
</if>
<if condition='##class(HS.FHIR.DTL.Utils).CPIsDefined(source,"OrderedBy")' >
<true>
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.CareProvider' targetObj='target.contained.(iContained).Practitioner' sourceObj='source.OrderedBy' />
<code>
<![CDATA[ set iContained = iContained + 1]]></code>
</true>
</if>
<if condition='##class(HS.FHIR.DTL.Utils).CPIsDefined(source,"VerifiedBy")' >
<true>
<assign value='"#"_source.VerifiedBy.InternalReference' property='target.performer.reference.value' action='set' />
<assign value='source.VerifiedBy.Name.GivenName_" "_source.VerifiedBy.Name.FamilyName' property='target.performer.display.value' action='set' />
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.CareProvider' targetObj='target.contained.(iContained).Practitioner' sourceObj='source.VerifiedBy' />
<code>
<![CDATA[ set iContained = iContained + 1]]></code>
</true>
<false>
<assign value='"unknown"' property='target.performer.display.value' action='set' />
</false>
</if>
<foreach property='source.Specimens()' key='k1' disabled='1' >
<assign value='"#specimen"_k1' property='target.specimen.(k1).reference.value' action='set' />
<assign value='source.Specimens.(k1).SpecimenType.Description' property='target.specimen.(k1).display.value' action='set' />
<assign value='"specimen"_k1' property='target.contained.(iContained).Specimen.id.value' action='set' />
<subtransform class='HS.FHIR.DTL.FromSDA.SubTransform.Specimen' targetObj='target.contained.(iContained).Specimen' sourceObj='source.Specimens.(k1)' />
<code>
<![CDATA[ set iContained = iContained + 1]]></code>
</foreach>
<assign value='source.ReasonForStudy.Description' property='target.request.(1).display.value' action='set' />
<assign value='"#"_$G(aux("OrderResourceId"))' property='target.request.(1).reference.value' action='set' />
<subtransform class='HS.FHIR.DTL.FromSDA.OtherOrderDiagnosticOrder' targetObj='target.contained.(iContained).DiagnosticOrder' sourceObj='source' aux='.aux' />
<assign value='$G(aux("OrderResourceId"))' property='target.contained.(iContained).DiagnosticOrder.id.value' action='set' />
<code>
<![CDATA[ set iContained = iContained + 1]]></code>
<if condition='target.issued.value = ""' >
<true>
<assign value='##class(HS.FHIR.DTL.Utils).FHIRInstant($ZDateTime($HoroLog,3))' property='target.issued.start.value' action='set' />
</true>
</if>
</transform>
}

}
