/* Copyright (c) 2020 by InterSystems Corporation.
   Cambridge, Massachusetts, U.S.A.  All rights reserved.
   Confidential property of InterSystems Corporation. */

Class EnsLib.EDI.EDIFACT.Service.FTPService Extends EnsLib.EDI.EDIFACT.Service.Standard [ ClassType = "", ProcedureBlock, System = 4 ]
{

Parameter ADAPTER = "EnsLib.FTP.InboundAdapter";

/// ConfigName(s) of the operations or processes to which reply messages should be forwarded.
Property ReplyTargetConfigNames As %String;

Parameter SETTINGS = "ReplyTargetConfigNames::selector?multiSelect=1&context={Ens.ContextSearch/ProductionItems?targets=1&productionName=@productionId}";

Parameter ReadTimeout As %Numeric = 1;

Method OnInit() As %Status
{
	Set tSC=##super()  Quit:$$$ISERR(tSC) tSC
	Set (..%Parser.StartTimeout,..%Parser.ReadTimeout)=..#ReadTimeout
	If $$$XOR(""=..ReplyTargetConfigNames,"Never"=..%ApplicationReplyMode) {
		If ""=..ReplyTargetConfigNames { $$$LOGWARNING("No Reply Target Config Name configured for ApplicationReplyMode '"_..%ApplicationReplyMode_"'") }
		Else { $$$LOGWARNING("Reply Target ConfigName(s) '"_..ReplyTargetConfigNames_"' configured for ApplicationReplyMode '"_..%ApplicationReplyMode_"'") }
	}
	Quit $$$OK
}

Method OnProcessInput(pFTPStream As %Stream.Object, Output pOutput As %CharacterStream) As %Status
{
	Set tSC=$$$OK
	$$$sysTRACE("Got FTP Stream "_pFTPStream_" for file '"_pFTPStream.Attributes("Filename")_"'")
	Set tIOStream=##Class(%IO.MetaCharacterStream).%New(pFTPStream)  Quit:'$IsObject(tIOStream) %objlasterror
	Set tIOStream.Name=pFTPStream.Attributes("Filename")_$C(13,10)_"via FTP "_..Adapter.FTPServer_":"_..Adapter.FTPPort_" path '"_..Adapter.FilePath_"'"

	Do ..%Parser.Reset()

	While 'tIOStream.AtEnd { ; Loop over docs in the file
		Set tSC1=..%Parser.ParseIOStream(tIOStream)
		Set:$$$ISERR(tSC1) tSC=$$$ADDSC(tSC,tSC1)
		 // Quit on fatal errors only
		Quit:$$$StatusEquals(tSC1,$$$EnsErrGeneral,$$$EnsEDIEDIFACTInvalidSegmentTerminator,$$$EnsEDIEDIFACTExpectedSegment,$$$EnsEDIEDIFACTUnexpectedEOD,$$$EnsEDIEDIFACTInvalidSegmentName,$$$EnsEDIEDIFACTBadBINLength,$$$EnsEDIEDIFACTUnexpectedEODBinary)
	}
	Do ..%Parser.Reset() ; release the file
	Quit tSC
}

Method SendReply(pReplyDocument As EnsLib.EDI.Document, pOriginalDoc As EnsLib.EDI.Document = {$$$NULLOREF}) As %Status
{
	If ""=..ReplyTargetConfigNames {
		$$$sysTRACE("Reply "_$S($IsObject(pReplyDocument):"/"_pReplyDocument.%Id(),1:"")_" not sent because no Reply Target Config Name is configured")
		Quit $$$OK
	}
	Set pReplyDocument.IsMutable=0
	Set tSC=$$$OK  For iTarget=1:1:$L(..ReplyTargetConfigNames, ",") { Set tOneTarget=$ZStrip($P(..ReplyTargetConfigNames,",",iTarget),"<>W")  Continue:""=tOneTarget
		Set tSC1=..SendRequestAsync(tOneTarget,pReplyDocument) Quit:$$$ISERR(tSC)
		Set:$$$ISERR(tSC1) tSC=$$$ADDSC(tSC,tSC1)
	}
	Quit tSC
}

ClassMethod OnGetConnections(Output pArray As %String, pItem As Ens.Config.Item)
{
	Do ##super(.pArray,pItem)
	If pItem.GetModifiedSetting("ReplyTargetConfigNames",.tValue) {
		For i=1:1:$L(tValue,",") { Set tOne=$ZStrip($P(tValue,",",i),"<>W")  Continue:""=tOne  Set pArray(tOne)="" }
	}
}

}
